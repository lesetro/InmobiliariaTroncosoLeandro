@model Inmobiliaria_troncoso_leandro.Models.InteresInmueble

@{
    ViewData["Title"] = "Detalle del Interés";
    var otrosIntereses = ViewBag.OtrosIntereses as List<InteresInmueble> ?? new List<InteresInmueble>();
}

<div class="container">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-action="Index" class="text-decoration-none">
                            <i class="fas fa-heart me-1"></i>
                            Gestión de Intereses
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">Detalle</li>
                </ol>
            </nav>
            
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-0">
                        <i class="fas fa-info-circle text-info me-2"></i>
                        Detalle del Interés
                    </h2>
                    <p class="text-muted mb-0">Información completa sobre el interés de <strong>@Model.Nombre</strong></p>
                </div>
                <div>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>
                        Volver al Listado
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Información Principal -->
        <div class="col-lg-8">
            <!-- Datos del Interesado -->
            <div class="card shadow mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-user me-2"></i>
                        Información del Interesado
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Nombre Completo:</label>
                                <div class="h5 text-primary">@Model.Nombre</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Email:</label>
                                <div>
                                    <a href="@Model.EmailFormateado" class="text-decoration-none">
                                        <i class="fas fa-envelope text-primary me-1"></i>
                                        @Model.Email
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-primary ms-2" onclick="copyToClipboard('@Model.Email')">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.Telefono))
                            {
                                <div class="mb-3">
                                    <label class="fw-bold text-muted">Teléfono:</label>
                                    <div>
                                        <a href="@Model.TelefonoFormateado" class="text-decoration-none">
                                            <i class="fas fa-phone text-success me-1"></i>
                                            @Model.Telefono
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-success ms-2" onclick="copyToClipboard('@Model.Telefono')">
                                            <i class="fas fa-copy"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Fecha de Interés:</label>
                                <div>@Model.Fecha.ToString("dddd, dd 'de' MMMM 'de' yyyy 'a las' HH:mm", new System.Globalization.CultureInfo("es-ES"))</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Tiempo Transcurrido:</label>
                                <div>
                                    <span class="badge @(Model.Contactado ? "bg-secondary" : ((DateTime.Now - Model.Fecha).Days > 3 ? "bg-danger" : "bg-info")) fs-6">
                                        @Model.DiasDesdeInteres
                                    </span>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Estado:</label>
                                <div>
                                    @if (Model.Contactado)
                                    {
                                        <span class="badge bg-success fs-6">
                                            <i class="fas fa-check-circle me-1"></i>
                                            Contactado
                                        </span>
                                        @if (Model.FechaContacto.HasValue)
                                        {
                                            <br><small class="text-muted">el @Model.FechaContacto.Value.ToString("dd/MM/yyyy 'a las' HH:mm")</small>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning fs-6">
                                            <i class="fas fa-clock me-1"></i>
                                            Pendiente de contactar
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Información del Inmueble -->
            <div class="card shadow mb-4">
                <div class="card-header bg-info text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-home me-2"></i>
                        Inmueble de Interés
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Dirección:</label>
                                <div class="h6">@Model.Inmueble?.Direccion</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Tipo:</label>
                                <div>@Model.Inmueble?.TipoInmueble?.Nombre</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Uso:</label>
                                <div>@Model.Inmueble?.Uso</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Precio:</label>
                                <div class="h5 text-success">@Model.Inmueble?.Precio.ToString("C")</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Ambientes:</label>
                                <div>@Model.Inmueble?.Ambientes</div>
                            </div>
                            <div class="mb-3">
                                <label class="fw-bold text-muted">Propietario:</label>
                                <div>@Model.Inmueble?.Propietario?.Usuario?.Nombre @Model.Inmueble?.Propietario?.Usuario?.Apellido</div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <a asp-controller="Inmuebles" asp-action="Details" asp-route-id="@Model.IdInmueble" 
                           class="btn btn-outline-info">
                            <i class="fas fa-eye me-1"></i>
                            Ver Detalles del Inmueble
                        </a>
                    </div>
                </div>
            </div>

            <!-- Observaciones -->
            <div class="card shadow">
                <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-sticky-note me-2"></i>
                        Observaciones
                    </h5>
                    <button type="button" class="btn btn-sm btn-light" onclick="editarObservaciones()">
                        <i class="fas fa-edit me-1"></i>
                        Editar
                    </button>
                </div>
                <div class="card-body">
                    <div id="observacionesContenido">
                        @if (!string.IsNullOrEmpty(Model.Observaciones))
                        {
                            <p class="mb-0">@Model.Observaciones</p>
                        }
                        else
                        {
                            <p class="text-muted fst-italic mb-0">Sin observaciones registradas</p>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Panel Lateral -->
        <div class="col-lg-4">
            <!-- Acciones Rápidas -->
            <div class="card shadow mb-4">
                <div class="card-header bg-warning text-dark">
                    <h6 class="mb-0">
                        <i class="fas fa-bolt me-2"></i>
                        Acciones Rápidas
                    </h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (!Model.Contactado)
                        {
                            <button type="button" class="btn btn-success" onclick="marcarContactado()">
                                <i class="fas fa-check me-1"></i>
                                Marcar como Contactado
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-secondary" onclick="desmarcarContactado()">
                                <i class="fas fa-undo me-1"></i>
                                Marcar como Pendiente
                            </button>
                        }
                        
                        <button type="button" class="btn btn-outline-primary" onclick="editarObservaciones()">
                            <i class="fas fa-edit me-1"></i>
                            Editar Observaciones
                        </button>
                        
                        <a href="@Model.EmailFormateado" class="btn btn-outline-info">
                            <i class="fas fa-envelope me-1"></i>
                            Enviar Email
                        </a>
                        
                        @if (!string.IsNullOrEmpty(Model.Telefono))
                        {
                            <a href="@Model.TelefonoFormateado" class="btn btn-outline-success">
                                <i class="fas fa-phone me-1"></i>
                                Llamar
                            </a>
                        }
                    </div>
                </div>
            </div>

            <!-- Información del ID -->
            <div class="card shadow mb-4">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-hashtag me-1"></i>
                        Información Técnica
                    </h6>
                </div>
                <div class="card-body">
                    <div class="small">
                        <div class="row mb-2">
                            <div class="col-5 fw-bold">ID Interés:</div>
                            <div class="col-7">#@Model.IdInteres</div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-5 fw-bold">ID Inmueble:</div>
                            <div class="col-7">#@Model.IdInmueble</div>
                        </div>
                        <div class="row">
                            <div class="col-5 fw-bold">Registrado:</div>
                            <div class="col-7">@Model.Fecha.ToString("dd/MM/yyyy HH:mm")</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Otros Intereses del Mismo Inmueble -->
            @if (otrosIntereses.Any())
            {
                <div class="card shadow">
                    <div class="card-header">
                        <h6 class="mb-0">
                            <i class="fas fa-users me-1"></i>
                            Otros Intereses en este Inmueble
                        </h6>
                    </div>
                    <div class="card-body">
                        <div class="list-group list-group-flush">
                            @foreach (var otro in otrosIntereses.Take(5))
                            {
                                <div class="list-group-item px-0 py-2">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="fw-bold">@otro.Nombre</div>
                                            <div class="small text-muted">@otro.Email</div>
                                            <div class="small text-muted">@otro.Fecha.ToString("dd/MM/yyyy")</div>
                                        </div>
                                        <div>
                                            @if (otro.Contactado)
                                            {
                                                <span class="badge bg-success">Contactado</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">Pendiente</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="mt-2">
                                        <a asp-action="Details" asp-route-id="@otro.IdInteres" class="btn btn-sm btn-outline-info">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                        @if (otrosIntereses.Count > 5)
                        {
                            <div class="text-center mt-2">
                                <a asp-action="Index" asp-route-idInmueble="@Model.IdInmueble" class="btn btn-sm btn-link">
                                    Ver todos (@otrosIntereses.Count)
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal para editar observaciones -->
<div class="modal fade" id="modalObservaciones" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-edit me-2"></i>
                    Editar Observaciones
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="observacionesTexto" class="form-label">Observaciones sobre el contacto</label>
                    <textarea class="form-control" id="observacionesTexto" rows="5" 
                              placeholder="Escribe aquí las observaciones sobre el contacto con este interesado...">@Model.Observaciones</textarea>
                    <div class="form-text">
                        <i class="fas fa-info-circle me-1"></i>
                        Máximo 500 caracteres. Incluye detalles como: fecha de contacto, medio utilizado, respuesta del cliente, próximos pasos, etc.
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="guardarObservaciones()">
                    <i class="fas fa-save me-1"></i>
                    Guardar Observaciones
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function marcarContactado() {
            if (confirm('¿Marcar este interés como contactado?')) {
                fetch('@Url.Action("MarcarContactado", "InteresInmueble")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: `id=@Model.IdInteres`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        mostrarMensaje(data.message, 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        mostrarMensaje(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    mostrarMensaje('Error al marcar como contactado', 'error');
                });
            }
        }

        function desmarcarContactado() {
            if (confirm('¿Marcar este interés como pendiente?')) {
                fetch('@Url.Action("DesmarcarContactado", "InteresInmueble")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: `id=@Model.IdInteres`
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        mostrarMensaje(data.message, 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        mostrarMensaje(data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    mostrarMensaje('Error al desmarcar contactado', 'error');
                });
            }
        }

        function editarObservaciones() {
            $('#modalObservaciones').modal('show');
        }

        function guardarObservaciones() {
            const observaciones = $('#observacionesTexto').val();
            
            fetch('@Url.Action("ActualizarObservaciones", "InteresInmueble")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: `id=@Model.IdInteres&observaciones=${encodeURIComponent(observaciones)}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    mostrarMensaje(data.message, 'success');
                    $('#modalObservaciones').modal('hide');
                    
                    // Actualizar el contenido sin recargar
                    if (observaciones.trim()) {
                        $('#observacionesContenido').html(`<p class="mb-0">${observaciones}</p>`);
                    } else {
                        $('#observacionesContenido').html('<p class="text-muted fst-italic mb-0">Sin observaciones registradas</p>');
                    }
                } else {
                    mostrarMensaje(data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                mostrarMensaje('Error al guardar observaciones', 'error');
            });
        }

        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                mostrarMensaje('Copiado al portapapeles', 'success');
            }).catch(function(err) {
                console.error('Error al copiar: ', err);
                mostrarMensaje('Error al copiar al portapapeles', 'error');
            });
        }

        function mostrarMensaje(mensaje, tipo) {
            // Crear toast notification
            const toast = $(`
                <div class="toast align-items-center text-white bg-${tipo === 'success' ? 'success' : tipo === 'error' ? 'danger' : tipo === 'warning' ? 'warning' : 'info'} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="fas fa-${tipo === 'success' ? 'check-circle' : tipo === 'error' ? 'exclamation-circle' : tipo === 'warning' ? 'exclamation-triangle' : 'info-circle'} me-2"></i>
                            ${mensaje}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `);

            // Agregar al container de toasts
            if ($('#toast-container').length === 0) {
                $('body').append('<div id="toast-container" class="toast-container position-fixed top-0 end-0 p-3"></div>');
            }
            
            $('#toast-container').append(toast);
            const bsToast = new bootstrap.Toast(toast[0]);
            bsToast.show();

            // Remover después de que se oculte
            toast.on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }

        // Contador de caracteres en tiempo real
        $('#observacionesTexto').on('input', function() {
            const maxLength = 500;
            const currentLength = $(this).val().length;
            const remaining = maxLength - currentLength;
            
            $(this).next('.form-text').html(`
                <i class="fas fa-info-circle me-1"></i>
                ${remaining} caracteres restantes. Incluye detalles como: fecha de contacto, medio utilizado, respuesta del cliente, próximos pasos, etc.
            `);
        });
    </script>
}