@model Inmobiliaria_troncoso_leandro.Models.Pago
@{
    ViewData["Title"] = "Registrar Pago de Venta";
}

<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Pagos")">Pagos</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Ventas")">Ventas</a></li>
        <li class="breadcrumb-item active">Registrar Pago</li>
    </ol>
</nav>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2><i class="bi bi-cash-coin me-2"></i>Registrar Pago de Venta</h2>
        <p class="text-muted mb-0">Complete los datos del pago para el contrato de venta seleccionado</p>
    </div>
    <a href="@Url.Action("Index", "Ventas")" class="btn btn-secondary">
        <i class="bi bi-arrow-left me-1"></i>Volver
    </a>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<form asp-action="Create" method="post" enctype="multipart/form-data" id="createVentaForm">
    @Html.AntiForgeryToken()

    <div class="row">
        <!-- Columna principal del formulario -->
        <div class="col-md-8">
            <!-- Información del contrato seleccionado -->
            <div class="card mb-4 border-success" id="infoContratoCard" style="display: none;">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-file-earmark-check me-2"></i>Contrato de Venta Seleccionado
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row" id="infoContratoBody">
                        <!-- Se llena dinámicamente -->
                    </div>
                </div>
            </div>

            <!-- Selección de contrato -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-search me-2"></i>Buscar Contrato de Venta
                    </h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="contratoSearch" class="form-label">
                            Buscar por dirección o código <span class="text-danger">*</span>
                        </label>
                        <div class="input-group">
                            <input type="text" id="contratoSearch" class="form-control"
                                placeholder="Ingrese dirección del inmueble..." autocomplete="off">
                            <button type="button" class="btn btn-outline-secondary" id="limpiarContrato">
                                <i class="bi bi-x-circle"></i>
                            </button>
                        </div>
                        <div id="contratoResults" class="list-group position-absolute w-100"
                            style="z-index: 1000; display: none; max-height: 300px; overflow-y: auto;"></div>

                        <input asp-for="IdInmueble" type="hidden" id="IdInmueble" />
                        <input type="hidden" id="IdContratoVenta" name="IdContratoVenta" />
                        <span asp-validation-for="IdInmueble" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <!-- Tipo de pago -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-credit-card me-2"></i>Tipo de Pago
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="card tipo-pago-card border-warning" data-tipo="seña">
                                <div class="card-body text-center">
                                    <i class="bi bi-piggy-bank text-warning fs-2"></i>
                                    <h6 class="mt-2">Seña</h6>
                                    <small class="text-muted">Reserva del inmueble</small>
                                    <div class="mt-2" id="infoSeña"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card tipo-pago-card border-info" data-tipo="anticipo">
                                <div class="card-body text-center">
                                    <i class="bi bi-cash-stack text-info fs-2"></i>
                                    <h6 class="mt-2">Anticipo</h6>
                                    <small class="text-muted">Pago parcial</small>
                                    <div class="mt-2" id="infoAnticipo"></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="card tipo-pago-card border-success" data-tipo="total">
                                <div class="card-body text-center">
                                    <i class="bi bi-currency-exchange text-success fs-2"></i>
                                    <h6 class="mt-2">Pago Total</h6>
                                    <small class="text-muted">Saldo completo</small>
                                    <div class="mt-2" id="infoTotal"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="card tipo-pago-card border-primary" data-tipo="cuota">
                                <div class="card-body">
                                    <div class="row align-items-center">
                                        <div class="col-md-2 text-center">
                                            <i class="bi bi-calendar-month text-primary fs-2"></i>
                                        </div>
                                        <div class="col-md-8">
                                            <h6 class="mb-1">Pago por Cuotas</h6>
                                            <small class="text-muted">Plan de pagos mensuales</small>
                                        </div>
                                        <div class="col-md-2 text-end">
                                            <div id="infoCuota"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Detalles del pago -->
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-receipt me-2"></i>Detalles del Pago
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="FechaPago" class="form-label">Fecha de Pago <span class="text-danger">*</span></label>
                                <input asp-for="FechaPago" type="date" class="form-control" />
                                <span asp-validation-for="FechaPago" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Estado" class="form-label">Estado <span class="text-danger">*</span></label>
                                <select asp-for="Estado" class="form-select">
                                    <option value="pagado">Pagado</option>
                                    <option value="pendiente">Pendiente</option>
                                </select>
                                <span asp-validation-for="Estado" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Concepto" class="form-label">Concepto <span class="text-danger">*</span></label>
                        <input asp-for="Concepto" class="form-control" id="Concepto" readonly />
                        <span asp-validation-for="Concepto" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="MontoBase" class="form-label">Monto <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">$</span>
                            <input asp-for="MontoBase" type="number" step="0.01" class="form-control" id="MontoBase" />
                        </div>
                        <div class="form-text" id="montoSugerencia"></div>
                        <span asp-validation-for="MontoBase" class="text-danger"></span>
                    </div>

                    <!-- Sección para cuotas (solo visible cuando se selecciona tipo cuota) -->
                    <div id="seccionCuotas" style="display: none;">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="NumeroCuotas" class="form-label">Número de Cuotas</label>
                                    <input type="number" class="form-control" id="NumeroCuotas" min="1" max="60" value="12" />
                                    <div class="form-text">Cantidad de cuotas mensuales</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="MontoCuota" class="form-label">Monto por Cuota</label>
                                    <div class="input-group">
                                        <span class="input-group-text">$</span>
                                        <input type="number" class="form-control" id="MontoCuota" readonly />
                                    </div>
                                    <div class="form-text">Calculado automáticamente</div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <div class="alert alert-warning small mb-0">
                                    <i class="bi bi-lightbulb me-1"></i>
                                    <strong>Tip:</strong> Puedes ajustar el número de cuotas o el monto de cada cuota. El sistema calculará automáticamente el otro valor.
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Observaciones" class="form-label">Observaciones</label>
                        <textarea asp-for="Observaciones" class="form-control" rows="3" placeholder="Detalles adicionales del pago..."></textarea>
                        <span asp-validation-for="Observaciones" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label for="comprobante" class="form-label">Comprobante de Pago</label>
                        <input type="file" class="form-control" id="comprobante" name="ComprobanteArchivo" accept=".pdf,.jpg,.jpeg,.png" />
                        <div class="form-text">Formatos: PDF, JPG, PNG (Máx. 5MB)</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar con resumen -->
        <div class="col-md-4">
            <!-- Resumen financiero -->
            <div class="card mb-4 border-primary">
                <div class="card-header bg-primary text-white">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-graph-up me-2"></i>Resumen Financiero
                    </h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <small class="text-muted">Precio Total:</small>
                        <div class="fw-bold fs-5 text-success" id="resumenPrecioTotal">$0</div>
                    </div>
                    <div class="mb-3">
                        <small class="text-muted">Monto Pagado:</small>
                        <div class="fw-bold text-info" id="resumenMontoPagado">$0</div>
                    </div>
                    <div class="mb-3">
                        <small class="text-muted">Saldo Pendiente:</small>
                        <div class="fw-bold text-danger" id="resumenSaldoPendiente">$0</div>
                    </div>
                    <div class="mb-3">
                        <small class="text-muted">Seña Requerida:</small>
                        <div class="fw-bold text-warning" id="resumenMontoSeña">$0</div>
                    </div>
                    <div class="progress mb-3" style="height: 10px;">
                        <div id="progressBar" class="progress-bar bg-success" role="progressbar" style="width: 0%"></div>
                    </div>
                    <small class="text-muted text-center d-block" id="resumenPorcentaje">0% pagado</small>
                </div>
            </div>

            <!-- Calculadora rápida -->
            <div class="card mb-4">
                <div class="card-header bg-info text-white">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-calculator me-2"></i>Calculadora Rápida
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row g-2">
                        <div class="col-6">
                            <button type="button" class="btn btn-outline-warning btn-sm w-100" onclick="calcularMonto('seña')">
                                Seña (10%)
                            </button>
                        </div>
                        <div class="col-6">
                            <button type="button" class="btn btn-outline-warning btn-sm w-100" onclick="calcularMonto('seña20')">
                                Seña (20%)
                            </button>
                        </div>
                        <div class="col-6">
                            <button type="button" class="btn btn-outline-info btn-sm w-100" onclick="calcularMonto('anticipo50')">
                                50% Anticipo
                            </button>
                        </div>
                        <div class="col-6">
                            <button type="button" class="btn btn-outline-success btn-sm w-100" onclick="calcularMonto('total')">
                                100% Total
                            </button>
                        </div>
                    </div>
                    <div class="mt-3 text-center">
                        <strong>Monto:</strong><br>
                        <span id="montoCalculado" class="text-success fs-5">$0</span>
                    </div>
                </div>
            </div>

            <!-- Información del comprador -->
            <div class="card">
                <div class="card-header bg-secondary text-white">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-person me-2"></i>Información del Comprador
                    </h6>
                </div>
                <div class="card-body">
                    <div id="infoComprador">
                        <p class="text-muted text-center">Seleccione un contrato</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Botones de acción -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body text-center">
                    <button type="submit" class="btn btn-success btn-lg me-3" id="btnSubmit">
                        <i class="bi bi-floppy me-2"></i>Registrar Pago
                    </button>
                    <a href="@Url.Action("Index", "Ventas")" class="btn btn-outline-secondary btn-lg">
                        <i class="bi bi-x-circle me-2"></i>Cancelar
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Inputs hidden -->
    <input asp-for="TipoPago" type="hidden" value="venta" />
    <input asp-for="NumeroPago" type="hidden" value="1" />
    <input asp-for="MontoTotal" type="hidden" id="MontoTotalHidden" />
    <input asp-for="RecargoMora" type="hidden" value="0" />
    <input asp-for="DiasMora" type="hidden" value="0" />
    <input type="hidden" id="tipoPagoSeleccionado" />
</form>

@section Scripts {
    <script>
    // Variables globales para almacenar datos del contrato
    let contratoActual = null;

    document.addEventListener('DOMContentLoaded', function () {
        configurarBusquedaContratos();
        configurarTiposPago();
        configurarCalculadoraCuotas();
    });

    function configurarBusquedaContratos() {
        const searchInput = document.getElementById('contratoSearch');
        const resultsDiv = document.getElementById('contratoResults');
        let searchTimeout;

        searchInput.addEventListener('input', function () {
            clearTimeout(searchTimeout);
            const query = this.value.trim();

            if (query.length < 2) {
                resultsDiv.style.display = 'none';
                return;
            }

            searchTimeout = setTimeout(() => {
                buscarContratos(query);
            }, 300);
        });

        document.getElementById('limpiarContrato').addEventListener('click', function () {
            limpiarSeleccionContrato();
        });

        // Cerrar resultados al hacer click fuera
        document.addEventListener('click', function (e) {
            if (!e.target.closest('#contratoSearch') && !e.target.closest('#contratoResults')) {
                resultsDiv.style.display = 'none';
            }
        });
    }

    function buscarContratos(query) {
        const resultsDiv = document.getElementById('contratoResults');
        resultsDiv.innerHTML = '<div class="list-group-item"><i class="bi bi-hourglass-split me-2"></i>Buscando contratos...</div>';
        resultsDiv.style.display = 'block';

        console.log('🔍 Buscando contratos con término:', query);

        fetch(`@Url.Action("BuscarInmueblesVenta", "Ventas")?termino=${encodeURIComponent(query)}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Error en la respuesta del servidor');
                }
                return response.json();
            })
            .then(data => {
                console.log('📊 Datos recibidos:', data);
                mostrarResultadosContratos(data);
            })
            .catch(error => {
                console.error('❌ Error:', error);
                resultsDiv.innerHTML = '<div class="list-group-item text-danger">Error al buscar contratos: ' + error.message + '</div>';
            });
    }

    function mostrarResultadosContratos(contratos) {
        const resultsDiv = document.getElementById('contratoResults');
        
        console.log('🎯 Mostrando resultados:', contratos);

        if (!contratos || contratos.length === 0) {
            resultsDiv.innerHTML = `
                <div class="list-group-item text-muted">
                    <i class="bi bi-inbox me-2"></i>No se encontraron contratos activos
                    <br><small>Verifique que existan contratos de venta activos para el término buscado</small>
                </div>`;
            return;
        }

        let html = '';
        contratos.forEach(contrato => {
            // Filtrar solo contratos activos (opcional, puedes quitarlo si quieres mostrar todos)
            if (!contrato.contratoActivo) {
                return; // Saltar contratos no activos
            }

            const estadoBadge = contrato.estadoContrato === 'seña_pagada' ? 
                '<span class="badge bg-success">Activo</span>' : 
                '<span class="badge bg-warning">' + contrato.estadoContrato + '</span>';

            html += `
                <div class="list-group-item list-group-item-action" onclick="seleccionarContrato(${JSON.stringify(contrato).replace(/"/g, '&quot;')})">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-start mb-1">
                                <h6 class="mb-0">${contrato.direccion}</h6>
                                ${estadoBadge}
                            </div>
                            <p class="mb-1 text-muted small">${contrato.texto}</p>
                            <p class="mb-1 small">
                                <span class="text-success">${contrato.tipo}</span> | 
                                <span class="text-primary">${contrato.nombreComprador}</span>
                            </p>
                            <p class="mb-0 small text-muted">${contrato.infoAdicional}</p>
                        </div>
                    </div>
                </div>
            `;
        });

        // Si después de filtrar no hay resultados
        if (html === '') {
            resultsDiv.innerHTML = `
                <div class="list-group-item text-warning">
                    <i class="bi bi-exclamation-triangle me-2"></i>No hay contratos activos
                    <br><small>Solo se muestran contratos con estado activo</small>
                </div>`;
            return;
        }

        resultsDiv.innerHTML = html;
        resultsDiv.style.display = 'block';
    }

    function seleccionarContrato(contrato) {
        console.log('✅ Contrato seleccionado:', contrato);
        contratoActual = contrato;
        
        // Actualizar inputs hidden
        document.getElementById('IdContratoVenta').value = contrato.id;
        document.getElementById('IdInmueble').value = contrato.idInmueble;
        document.getElementById('contratoSearch').value = contrato.direccion;
        document.getElementById('contratoResults').style.display = 'none';

        // Mostrar información del contrato
        mostrarInfoContrato(contrato);
        
        // Actualizar resumen financiero
        actualizarResumenFinanciero(contrato);
        
        // Actualizar información de tipos de pago
        actualizarOpcionesPago(contrato);
        
        // Mostrar sección del contrato
        document.getElementById('infoContratoCard').style.display = 'block';
    }

    function mostrarInfoContrato(contrato) {
        const infoBody = document.getElementById('infoContratoBody');
        const estadoColor = contrato.estadoContrato === 'seña_pagada' ? 'success' : 'warning';
        
        infoBody.innerHTML = `
            <div class="col-md-6">
                <strong>Inmueble:</strong><br>
                ${contrato.direccion}<br>
                <small class="text-muted">${contrato.tipo}</small><br>
                <span class="badge bg-${estadoColor}">${contrato.estadoContrato}</span>
            </div>
            <div class="col-md-6">
                <strong>Comprador:</strong><br>
                ${contrato.nombreComprador}<br>
                <small class="text-muted">📞 ${contrato.telefonoComprador}</small><br>
                <small class="text-muted">📧 ${contrato.emailComprador}</small>
            </div>
        `;

        // Actualizar información del comprador en sidebar
        document.getElementById('infoComprador').innerHTML = `
            <strong>${contrato.nombreComprador}</strong><br>
            <small class="text-muted">📞 ${contrato.telefonoComprador}</small><br>
            <small class="text-muted">📧 ${contrato.emailComprador}</small>
        `;
    }

    function actualizarResumenFinanciero(contrato) {
        const precioTotal = contrato.precioTotal || 0;
        const montoPagado = contrato.montoPagado || 0;
        const saldoPendiente = contrato.saldoPendiente || precioTotal;
        const montoSeña = contrato.montoSeña || 0;
        const porcentajePagado = contrato.porcentajePagado || ((montoPagado / precioTotal) * 100) || 0;

        document.getElementById('resumenPrecioTotal').textContent = `$${precioTotal.toLocaleString('es-AR')}`;
        document.getElementById('resumenMontoPagado').textContent = `$${montoPagado.toLocaleString('es-AR')}`;
        document.getElementById('resumenSaldoPendiente').textContent = `$${saldoPendiente.toLocaleString('es-AR')}`;
        document.getElementById('resumenMontoSeña').textContent = `$${montoSeña.toLocaleString('es-AR')}`;
        document.getElementById('resumenPorcentaje').textContent = `${porcentajePagado.toFixed(1)}% pagado`;
        
        const progressBar = document.getElementById('progressBar');
        progressBar.style.width = `${porcentajePagado}%`;
        progressBar.textContent = `${porcentajePagado.toFixed(1)}%`;
    }

    function actualizarOpcionesPago(contrato) {
        const montoSeña = contrato.montoSeña || 0;
        const saldoPendiente = contrato.saldoPendiente || 0;
        const señaPagada = contrato.señaPagada || false;

        // Actualizar información de seña
        document.getElementById('infoSeña').innerHTML = señaPagada ? 
            '<small class="text-success"><i class="bi bi-check-circle me-1"></i>Seña pagada</small>' :
            `<small class="text-warning"><i class="bi bi-clock me-1"></i>Pendiente: $${montoSeña.toLocaleString('es-AR')}</small>`;

        // Actualizar información de anticipo
        document.getElementById('infoAnticipo').innerHTML = 
            `<small><i class="bi bi-wallet me-1"></i>Saldo: $${saldoPendiente.toLocaleString('es-AR')}</small>`;

        // Actualizar información de pago total
        document.getElementById('infoTotal').innerHTML = 
            `<small><i class="bi bi-currency-dollar me-1"></i>Total: $${saldoPendiente.toLocaleString('es-AR')}</small>`;

        // Actualizar información de cuotas
        document.getElementById('infoCuota').innerHTML = 
            `<small><i class="bi bi-calendar me-1"></i>Hasta 60 cuotas</small>`;
    }

    function configurarTiposPago() {
        document.querySelectorAll('.tipo-pago-card').forEach(card => {
            card.addEventListener('click', function () {
                if (!contratoActual) {
                    alert('Primero seleccione un contrato');
                    return;
                }

                // Remover selección anterior
                document.querySelectorAll('.tipo-pago-card').forEach(c => {
                    c.classList.remove('seleccionada');
                });

                // Seleccionar nuevo tipo
                this.classList.add('seleccionada');
                const tipo = this.getAttribute('data-tipo');
                document.getElementById('tipoPagoSeleccionado').value = tipo;

                actualizarFormularioPorTipo(tipo);
            });

            // Efectos hover
            card.addEventListener('mouseenter', function () {
                if (!this.classList.contains('seleccionada')) {
                    this.style.transform = 'translateY(-2px)';
                    this.style.boxShadow = '0 4px 8px rgba(0,0,0,0.1)';
                }
            });

            card.addEventListener('mouseleave', function () {
                if (!this.classList.contains('seleccionada')) {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                }
            });
        });
    }

    function actualizarFormularioPorTipo(tipo) {
        const conceptoInput = document.getElementById('Concepto');
        const montoBaseInput = document.getElementById('MontoBase');
        const seccionCuotas = document.getElementById('seccionCuotas');
        const montoSugerencia = document.getElementById('montoSugerencia');

        // Ocultar sección de cuotas por defecto
        seccionCuotas.style.display = 'none';
        montoBaseInput.readOnly = false;
        montoBaseInput.value = '';

        // Resetear campos de cuotas
        document.getElementById('NumeroCuotas').value = '12';
        document.getElementById('MontoCuota').value = '';

        switch (tipo) {
            case 'seña':
                conceptoInput.value = 'Seña de reserva - Contrato de Venta';
                montoBaseInput.value = contratoActual.montoSeña || '';
                montoBaseInput.readOnly = true;
                montoSugerencia.innerHTML = '<div class="text-info"><i class="bi bi-info-circle me-1"></i>Monto de seña establecido en el contrato</div>';
                break;
            case 'anticipo':
                conceptoInput.value = 'Anticipo de compra - Contrato de Venta';
                montoBaseInput.placeholder = 'Ingrese monto del anticipo';
                montoSugerencia.innerHTML = `<div class="text-info"><i class="bi bi-info-circle me-1"></i>Ingrese el monto del anticipo (máximo: $${contratoActual.saldoPendiente.toLocaleString('es-AR')})</div>`;
                break;
            case 'total':
                conceptoInput.value = 'Pago total - Contrato de Venta';
                montoBaseInput.value = contratoActual.saldoPendiente || '';
                montoBaseInput.readOnly = true;
                montoSugerencia.innerHTML = '<div class="text-success"><i class="bi bi-info-circle me-1"></i>Pago del saldo pendiente completo</div>';
                break;
            case 'cuota':
                conceptoInput.value = 'Pago de cuota - Plan de pagos';
                montoBaseInput.placeholder = 'Monto de la cuota o número de cuotas';
                seccionCuotas.style.display = 'block';
                montoSugerencia.innerHTML = '<div class="text-info"><i class="bi bi-info-circle me-1"></i>Plan de pagos en cuotas mensuales</div>';
                
                // Calcular cuota automáticamente al seleccionar
                setTimeout(() => {
                    calcularCuota();
                }, 100);
                break;
        }

        // Actualizar monto total hidden
        document.getElementById('MontoTotalHidden').value = montoBaseInput.value || '0';
    }

    function configurarCalculadoraCuotas() {
        const numeroCuotasInput = document.getElementById('NumeroCuotas');
        const montoBaseInput = document.getElementById('MontoBase');
        const montoCuotaInput = document.getElementById('MontoCuota');

        numeroCuotasInput.addEventListener('input', function() {
            if (document.getElementById('tipoPagoSeleccionado').value === 'cuota') {
                calcularCuota();
            }
        });

        montoBaseInput.addEventListener('input', function() {
            if (document.getElementById('tipoPagoSeleccionado').value === 'cuota') {
                calcularNumeroCuotas();
            }
        });

        // Calcular automáticamente al cambiar el número de cuotas
        numeroCuotasInput.addEventListener('change', function() {
            if (document.getElementById('tipoPagoSeleccionado').value === 'cuota') {
                calcularCuota();
            }
        });
    }

    function calcularCuota() {
        if (!contratoActual) {
            alert('Primero seleccione un contrato');
            return;
        }

        const numeroCuotas = parseInt(document.getElementById('NumeroCuotas').value) || 1;
        const saldoPendiente = contratoActual.saldoPendiente || 0;
        
        console.log('🔢 Calculando cuota:', { numeroCuotas, saldoPendiente });

        // Validaciones
        if (numeroCuotas <= 0) {
            alert('El número de cuotas debe ser mayor a 0');
            document.getElementById('NumeroCuotas').value = 1;
            return;
        }

        if (saldoPendiente <= 0) {
            alert('No hay saldo pendiente para calcular cuotas');
            return;
        }

        // Calcular monto de cuota
        const montoCuota = saldoPendiente / numeroCuotas;
        
        console.log('💰 Monto de cuota calculado:', montoCuota);

        // Actualizar campos
        document.getElementById('MontoCuota').value = montoCuota.toFixed(2);
        document.getElementById('MontoBase').value = montoCuota.toFixed(2);
        document.getElementById('MontoTotalHidden').value = montoCuota.toFixed(2);

        // Actualizar información visual
        actualizarInfoCuotas(numeroCuotas, montoCuota, saldoPendiente);
    }

    function calcularNumeroCuotas() {
        if (!contratoActual) {
            return;
        }

        const montoBase = parseFloat(document.getElementById('MontoBase').value) || 0;
        const saldoPendiente = contratoActual.saldoPendiente || 0;
        
        console.log('📊 Calculando número de cuotas:', { montoBase, saldoPendiente });

        if (montoBase > 0 && saldoPendiente > 0) {
            const numeroCuotas = Math.ceil(saldoPendiente / montoBase);
            document.getElementById('NumeroCuotas').value = numeroCuotas;
            document.getElementById('MontoCuota').value = montoBase.toFixed(2);
            
            actualizarInfoCuotas(numeroCuotas, montoBase, saldoPendiente);
        }
    }

    function actualizarInfoCuotas(numeroCuotas, montoCuota, saldoPendiente) {
        const montoSugerencia = document.getElementById('montoSugerencia');
        const totalAPagar = montoCuota * numeroCuotas;
        
        montoSugerencia.innerHTML = `
            <div class="alert alert-info p-2 mt-2">
                <small>
                    <strong>Plan de Cuotas:</strong><br>
                    • <strong>${numeroCuotas}</strong> cuotas de <strong>$${montoCuota.toLocaleString('es-AR', {minimumFractionDigits: 2})}</strong><br>
                    • Total a pagar: <strong>$${totalAPagar.toLocaleString('es-AR', {minimumFractionDigits: 2})}</strong><br>
                    • Saldo pendiente: <strong>$${saldoPendiente.toLocaleString('es-AR', {minimumFractionDigits: 2})}</strong>
                    ${totalAPagar > saldoPendiente ? '<br><span class="text-warning"><i class="bi bi-exclamation-triangle"></i> El total excede el saldo pendiente</span>' : ''}
                </small>
            </div>
        `;
    }

    function calcularMonto(tipo) {
        if (!contratoActual) {
            alert('Primero seleccione un contrato');
            return;
        }

        const precioTotal = contratoActual.precioTotal || 0;
        const saldoPendiente = contratoActual.saldoPendiente || 0;
        let monto = 0;

        switch (tipo) {
            case 'seña':
                monto = contratoActual.montoSeña || (precioTotal * 0.1);
                break;
            case 'seña20':
                monto = precioTotal * 0.2;
                break;
            case 'anticipo50':
                monto = saldoPendiente * 0.5;
                break;
            case 'total':
                monto = saldoPendiente;
                break;
        }

        document.getElementById('MontoBase').value = monto.toFixed(2);
        document.getElementById('MontoTotalHidden').value = monto.toFixed(2);
        document.getElementById('montoCalculado').textContent = `$${monto.toLocaleString('es-AR', {minimumFractionDigits: 2})}`;
    }

    function limpiarSeleccionContrato() {
        contratoActual = null;
        document.getElementById('IdContratoVenta').value = '';
        document.getElementById('IdInmueble').value = '';
        document.getElementById('contratoSearch').value = '';
        document.getElementById('infoContratoCard').style.display = 'none';
        document.getElementById('contratoResults').style.display = 'none';
        
        // Limpiar formulario
        document.querySelectorAll('.tipo-pago-card').forEach(c => c.classList.remove('seleccionada'));
        document.getElementById('Concepto').value = '';
        document.getElementById('MontoBase').value = '';
        document.getElementById('seccionCuotas').style.display = 'none';
        document.getElementById('montoSugerencia').innerHTML = '';
        
        // Limpiar resumen
        document.getElementById('resumenPrecioTotal').textContent = '$0';
        document.getElementById('resumenMontoPagado').textContent = '$0';
        document.getElementById('resumenSaldoPendiente').textContent = '$0';
        document.getElementById('resumenMontoSeña').textContent = '$0';
        document.getElementById('resumenPorcentaje').textContent = '0% pagado';
        document.getElementById('progressBar').style.width = '0%';
        
        // Limpiar info comprador
        document.getElementById('infoComprador').innerHTML = '<p class="text-muted text-center">Seleccione un contrato</p>';
    }

    // Validación del formulario
    document.getElementById('createVentaForm').addEventListener('submit', function (e) {
        if (!contratoActual) {
            e.preventDefault();
            alert('Debe seleccionar un contrato de venta');
            return;
        }

        const tipoPago = document.getElementById('tipoPagoSeleccionado').value;
        if (!tipoPago) {
            e.preventDefault();
            alert('Debe seleccionar un tipo de pago');
            return;
        }

        const montoBase = parseFloat(document.getElementById('MontoBase').value) || 0;
        if (montoBase <= 0) {
            e.preventDefault();
            alert('Debe ingresar un monto válido mayor a cero');
            return;
        }

        if (montoBase > contratoActual.saldoPendiente) {
            e.preventDefault();
            alert('El monto no puede ser mayor al saldo pendiente ($' + contratoActual.saldoPendiente.toLocaleString('es-AR') + ')');
            return;
        }

        // Mostrar loading
        const submitBtn = document.getElementById('btnSubmit');
        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Procesando...';
        submitBtn.disabled = true;
    });
</script>

    <style>
        .tipo-pago-card {
            cursor: pointer;
            transition: all 0.3s ease;
            height: 140px;
        }

        .tipo-pago-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        .tipo-pago-card.seleccionada {
            border-width: 3px !important;
            background-color: rgba(13, 110, 253, 0.05);
            box-shadow: 0 0 15px rgba(13, 110, 253, 0.3);
        }

        #contratoResults {
            border: 1px solid #dee2e6;
            border-top: none;
            border-radius: 0 0 0.375rem 0.375rem;
        }

        .progress-bar {
            transition: width 0.5s ease;
        }

        #seccionCuotas {
            background-color: #f8f9fa;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-top: 1rem;
            border-left: 4px solid #0d6efd;
        }

        #seccionCuotas .form-control:read-only {
            background-color: #e9ecef;
            opacity: 1;
        }

        .alert small {
            font-size: 0.875em;
        }
    </style>
}