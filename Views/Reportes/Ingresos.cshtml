@model IEnumerable<object>
@{
    ViewData["Title"] = "Reporte de Ingresos";
}

<!-- Page Header -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2>
            <i class="bi bi-bar-chart text-success me-2"></i>
            Reporte de Ingresos
        </h2>
        <p class="text-muted mb-0">
            Ingresos detallados de los últimos @(ViewBag.Meses ?? 6) meses
        </p>
    </div>
    <div>
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left me-1"></i>Volver al Dashboard
        </a>
        <button class="btn btn-outline-primary ms-2" onclick="location.reload()">
            <i class="bi bi-arrow-clockwise me-1"></i>Actualizar
        </button>
    </div>
</div>

<!-- Filtros -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3 align-items-end">
            <div class="col-md-3">
                <label for="meses" class="form-label">
                    <i class="bi bi-calendar-range me-1"></i>Período
                </label>
                <select name="meses" id="meses" class="form-select">
                    <option value="3" @(ViewBag.Meses == 3 ? "selected" : "")>Últimos 3 meses</option>
                    <option value="6" @(ViewBag.Meses == 6 ? "selected" : "")>Últimos 6 meses</option>
                    <option value="12" @(ViewBag.Meses == 12 ? "selected" : "")>Último año</option>
                    <option value="24" @(ViewBag.Meses == 24 ? "selected" : "")>Últimos 2 años</option>
                </select>
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search me-1"></i>Filtrar
                </button>
            </div>
        </form>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <!-- Resumen General -->
    <div class="row mb-4">
        @{
            var totalIngresos = Model.Sum(m => Convert.ToDecimal(GetPropertyValue(m, "TotalIngresos") ?? 0));
            var totalPagos = Model.Sum(m => Convert.ToInt32(GetPropertyValue(m, "CantidadPagos") ?? 0));
            var promedioMensual = totalIngresos / Model.Count();
        }
        
        <div class="col-md-4">
            <div class="card border-success">
                <div class="card-body text-center">
                    <i class="bi bi-currency-dollar text-success fs-1"></i>
                    <h4 class="text-success mt-2">@totalIngresos.ToString("C")</h4>
                    <p class="text-muted small mb-0">Total Ingresos</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-primary">
                <div class="card-body text-center">
                    <i class="bi bi-receipt text-primary fs-1"></i>
                    <h4 class="text-primary mt-2">@totalPagos</h4>
                    <p class="text-muted small mb-0">Total Pagos</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-info">
                <div class="card-body text-center">
                    <i class="bi bi-graph-up text-info fs-1"></i>
                    <h4 class="text-info mt-2">@promedioMensual.ToString("C")</h4>
                    <p class="text-muted small mb-0">Promedio Mensual</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de Ingresos -->
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">
                <i class="bi bi-table me-2"></i>
                Detalle por Mes
                <span class="badge bg-light text-primary ms-2">
                    @ViewBag.TotalMeses registros
                </span>
            </h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>
                                <i class="bi bi-calendar me-1"></i>Mes
                            </th>
                            <th class="text-center">
                                <i class="bi bi-receipt me-1"></i>Cantidad de Pagos
                            </th>
                            <th class="text-end">
                                <i class="bi bi-currency-dollar me-1"></i>Total Ingresos
                            </th>
                            <th class="text-end">
                                <i class="bi bi-graph-up me-1"></i>Promedio por Pago
                            </th>
                            <th class="text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var mes in Model.OrderByDescending(m => GetPropertyValue(m, "FechaMes")))
                        {
                            var ingresos = Convert.ToDecimal(GetPropertyValue(mes, "TotalIngresos") ?? 0);
                            var cantidadPagos = Convert.ToInt32(GetPropertyValue(mes, "CantidadPagos") ?? 0);
                            var promedioPago = cantidadPagos > 0 ? ingresos / cantidadPagos : 0;
                            <tr>
                                <td>
                                    <div class="fw-semibold">
                                        @GetPropertyValue(mes, "NombreMes")
                                    </div>
                                    <small class="text-muted">
                                        @GetPropertyValue(mes, "Año")
                                    </small>
                                </td>
                                <td class="text-center">
                                    <span class="badge bg-primary fs-6">
                                        @cantidadPagos
                                    </span>
                                </td>
                                <td class="text-end">
                                    <div class="fw-bold text-success">
                                        @ingresos.ToString("C")
                                    </div>
                                </td>
                                <td class="text-end">
                                    <span class="text-muted">
                                        @promedioPago.ToString("C")
                                    </span>
                                </td>
                                <td class="text-center">
                                    <a href="@Url.Action("Index", "Pagos", new { fechaInicio = GetPropertyValue(mes, "FechaInicio"), fechaFin = GetPropertyValue(mes, "FechaFin") })" 
                                       class="btn btn-outline-primary btn-sm">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot class="table-light">
                        <tr class="fw-bold">
                            <td>TOTAL</td>
                            <td class="text-center">@totalPagos</td>
                            <td class="text-end text-success">@totalIngresos.ToString("C")</td>
                            <td class="text-end">@promedioMensual.ToString("C")</td>
                            <td class="text-center">-</td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>

    
}
else
{
    <!-- Sin Datos -->
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="bi bi-inbox text-muted" style="font-size: 4rem;"></i>
            <h4 class="text-muted mt-3">No hay datos disponibles</h4>
            <p class="text-muted">
                No se encontraron ingresos para el período seleccionado.
            </p>
            <div class="mt-4">
                <a href="@Url.Action("Index", "Pagos")" class="btn btn-primary">
                    <i class="bi bi-plus-circle me-1"></i>Registrar Primer Pago
                </a>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary ms-2">
                    <i class="bi bi-arrow-left me-1"></i>Volver al Dashboard
                </a>
            </div>
        </div>
    </div>
}

<!-- Error Messages -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show mt-4" role="alert">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@section Scripts {
    <script>
        function exportarExcel() {
            alert('Función de exportar a Excel - Por implementar');
        }
        
        function exportarPDF() {
            alert('Función de exportar a PDF - Por implementar');
        }
    </script>
}

@functions {
    private object? GetPropertyValue(object obj, string propertyName)
    {
        if (obj == null) return null;
        
        try
        {
            var property = obj.GetType().GetProperty(propertyName);
            return property?.GetValue(obj);
        }
        catch
        {
            return null;
        }
    }
}