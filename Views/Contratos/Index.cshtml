@model IEnumerable<Inmobiliaria_troncoso_leandro.Models.Contrato>
@{
    ViewData["Title"] = "Contratos";
}

<div class="row justify-content-between align-items-center mb-4">
    <div class="col-md-6">
        <h2>üìã Gesti√≥n de Contratos</h2>
    </div>
    <div class="col-md-6 text-end">
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-circle"></i> Crear Nuevo Contrato
        </a>
    </div>
</div>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        <strong>‚ùå Error:</strong> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <strong>‚úÖ √âxito:</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filtros de b√∫squeda -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="buscar" class="form-label">Buscar</label>
                    <input type="text" 
                           id="buscar" 
                           name="buscar" 
                           class="form-control" 
                           placeholder="Direcci√≥n, inquilino, DNI..."
                           value="@ViewBag.Buscar">
                </div>
                <div class="col-md-3">
                    <label for="estado" class="form-label">Estado</label>
                    <select name="estado" id="estado" class="form-select">
                        <option value="">Todos los estados</option>
                        <option value="vigente" selected="@(ViewBag.Estado == "vigente")">Vigente</option>
                        <option value="finalizado" selected="@(ViewBag.Estado == "finalizado")">Finalizado</option>
                        <option value="finalizado_anticipado" selected="@(ViewBag.Estado == "finalizado_anticipado")">Finalizado Anticipado</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-outline-primary me-2">
                        <i class="bi bi-search"></i> Buscar
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i> Limpiar
                    </a>
                </div>
                <div class="col-md-2 text-end">
                    <small class="text-muted">
                        Total: @ViewBag.TotalRegistros contratos
                    </small>
                </div>
            </div>
        </form>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <i class="bi bi-file-text" style="font-size: 4rem; color: #6c757d;"></i>
        <h4 class="text-muted mt-3">No hay contratos</h4>
        <p class="text-muted">
            @if (!string.IsNullOrEmpty(ViewBag.Buscar) || !string.IsNullOrEmpty(ViewBag.Estado))
            {
                <span>No se encontraron contratos con los filtros aplicados.</span>
            }
            else
            {
                <span>Comienza creando tu primer contrato.</span>
            }
        </p>
        <a asp-action="Create" class="btn btn-primary mt-2">
            <i class="bi bi-plus-circle"></i> Crear Primer Contrato
        </a>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
            <tr>
                <th style="width: 8%;">ID</th>
                    <th style="width: 20%;">Inmueble</th>
                    <th style="width: 18%;">Inquilino</th>
                    <th style="width: 12%;">Fecha Inicio</th>
                    <th style="width: 12%;">Fecha Fin</th>
                    <th style="width: 10%;">Monto</th>
                    <th style="width: 10%;">Estado</th>
                    <th style="width: 10%;">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contrato in Model)
                {
                    <tr>
                        <td>
                            <span class="badge bg-secondary">#@contrato.IdContrato</span>
                        </td>
                        <td>
                            <strong>@contrato.Inmueble?.Direccion</strong>
                        </td>
                        <td>
                            <div>
                                <strong>@(contrato.Inquilino?.Usuario?.Nombre) @(contrato.Inquilino?.Usuario?.Apellido)</strong>
                                <br><small class="text-muted">DNI: @contrato.Inquilino?.Usuario?.Dni</small>
                            </div>
                        </td>
                        <td>
                            <span class="badge bg-info">
                                @contrato.FechaInicio.ToString("dd/MM/yyyy")
                            </span>
                        </td>
                        <td>
                            <span class="badge bg-warning text-dark">
                                @contrato.FechaFin.ToString("dd/MM/yyyy")
                            </span>
                            @if (contrato.FechaFinAnticipada.HasValue)
                            {
                                <br><small class="text-muted">Anticipada: @contrato.FechaFinAnticipada.Value.ToString("dd/MM/yyyy")</small>
                            }
                        </td>
                        <td>
                            <strong class="text-success">@contrato.MontoMensual.ToString("C", new System.Globalization.CultureInfo("es-AR"))</strong>
                            @if (contrato.MultaAplicada > 0)
                            {
                                <br><small class="text-danger">Multa: @contrato.MultaAplicada.ToString("C", new System.Globalization.CultureInfo("es-AR"))</small>
                            }
                        </td>
                        <td>
                            @{
                                var estadoBadgeClass = contrato.Estado switch
                                {
                                    "vigente" => "bg-success",
                                    "finalizado" => "bg-secondary",
                                    "finalizado_anticipado" => "bg-warning text-dark",
                                    _ => "bg-light text-dark"
                                };
                                
                                var estadoTexto = contrato.Estado switch
                                {
                                    "vigente" => "VIGENTE",
                                    "finalizado" => "FINALIZADO",
                                    "finalizado_anticipado" => "FINALIZADO ANTICIPADO",
                                    _ => contrato.Estado.ToUpper()
                                };
                            }
                            <span class="badge @estadoBadgeClass">@estadoTexto</span>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@contrato.IdContrato" 
                                   class="btn btn-warning btn-sm" title="Editar">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@contrato.IdContrato" 
                                   class="btn btn-danger btn-sm" title="Finalizar">
                                    <i class="bi bi-x-circle"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginaci√≥n -->
    @if (ViewBag.TotalPaginas > 1)
    {
        <nav aria-label="Paginaci√≥n de contratos">
            <ul class="pagination justify-content-center">
                <!-- P√°gina anterior -->
                @if (ViewBag.PaginaActual > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" 
                           asp-route-pagina="@(ViewBag.PaginaActual - 1)"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">
                            Anterior
                        </a>
                    </li>
                }

                <!-- P√°ginas num√©ricas -->
                @{
                    int inicioRango = Math.Max(1, ViewBag.PaginaActual - 2);
                    int finRango = Math.Min(ViewBag.TotalPaginas, ViewBag.PaginaActual + 2);
                }

                @if (inicioRango > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pagina="1"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">1</a>
                    </li>
                    @if (inicioRango > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                @for (int i = inicioRango; i <= finRango; i++)
                {
                    <li class="page-item @(i == ViewBag.PaginaActual ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pagina="@i"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">@i</a>
                    </li>
                }

                @if (finRango < ViewBag.TotalPaginas)
                {
                    @if (finRango < ViewBag.TotalPaginas - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pagina="@ViewBag.TotalPaginas"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">@ViewBag.TotalPaginas</a>
                    </li>
                }

                <!-- P√°gina siguiente -->
                @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" 
                           asp-route-pagina="@(ViewBag.PaginaActual + 1)"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">
                            Siguiente
                        </a>
                    </li>
                }
            </ul>
        </nav>

        <!-- Informaci√≥n de paginaci√≥n -->
        <div class="text-center text-muted mt-3">
            <small>
                Mostrando @((ViewBag.PaginaActual - 1) * ViewBag.ITEMS_POR_PAGINA + 1) - 
                @(Math.Min(ViewBag.PaginaActual * ViewBag.ITEMS_POR_PAGINA, ViewBag.TotalRegistros)) 
                de @ViewBag.TotalRegistros contratos
            </small>
        </div>
    }
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Limpiar formulario de b√∫squeda
            const limpiarBtn = document.querySelector('a[href*="Index"]:not([href*="pagina"])');
            if (limpiarBtn) {
                limpiarBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    window.location.href = '@Url.Action("Index")';
                });
            }

            // Auto-submit al cambiar estado
            const estadoSelect = document.getElementById('estado');
            if (estadoSelect) {
                estadoSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }
        });
    </script>
}