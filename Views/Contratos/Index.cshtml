@model IEnumerable<Inmobiliaria_troncoso_leandro.Models.Contrato>
@{
    ViewData["Title"] = "Contratos";
}

<div class="row justify-content-between align-items-center mb-4">
    <div class="col-md-6">
        <h2><i class="bi bi-file-text"></i> Gestión de Contratos</h2>
    </div>
    <div class="col-md-6 text-end">
        <!-- Dropdown para elegir tipo de contrato -->
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" 
                    data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-plus-circle"></i> Crear Nuevo Contrato
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <li>
                    <a class="dropdown-item" href="@Url.Action("Create", new { tipo = "alquiler" })">
                        <i class="bi bi-house-door text-primary me-2"></i>
                        Contrato de Alquiler
                    </a>
                </li>
                <li>
                    <a class="dropdown-item" href="@Url.Action("Create", "ContratoVenta" , new { tipo = "venta" })">
                        <i class="bi bi-cash-coin text-success me-2"></i>
                        Contrato de Venta
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        <strong><i class="bi bi-x-circle"></i> Error:</strong> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        <strong><i class="bi bi-check-circle"></i> Éxito:</strong> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Filtros de búsqueda -->
<div class="card mb-4 shadow-sm">
    <div class="card-body">
        <form method="get" asp-action="Index">
            <div class="row g-3 align-items-end">
                <div class="col-md-4">
                    <label for="buscar" class="form-label fw-bold">
                        <i class="bi bi-search"></i> Buscar
                    </label>
                    <input type="text" 
                           id="buscar" 
                           name="buscar" 
                           class="form-control" 
                           placeholder="Dirección, inquilino, propietario, DNI..."
                           value="@ViewBag.Buscar">
                </div>
                <div class="col-md-3">
                    <label for="estado" class="form-label fw-bold">
                        <i class="bi bi-flag"></i> Estado
                    </label>
                    <select name="estado" id="estado" class="form-select">
                        <option value="">Todos los estados</option>
                        <option value="vigente" selected="@(ViewBag.Estado == "vigente")">Vigente</option>
                        <option value="finalizado" selected="@(ViewBag.Estado == "finalizado")">Finalizado</option>
                        <option value="finalizado_anticipado" selected="@(ViewBag.Estado == "finalizado_anticipado")">Finalizado Anticipado</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="tipoContrato" class="form-label fw-bold">
                        <i class="bi bi-tags"></i> Tipo de Contrato
                    </label>
                    <select name="tipoContrato" id="tipoContrato" class="form-select">
                        <option value="">Todos los tipos</option>
                        <option value="alquiler" selected="@(ViewBag.TipoContrato == "alquiler")">Alquiler</option>
                        <option value="venta" selected="@(ViewBag.TipoContrato == "venta")">Venta</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-outline-primary me-2">
                        <i class="bi bi-search"></i> Buscar
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i> Limpiar
                    </a>
                </div>
                <div class="col-md-2 text-end">
                    <small class="text-muted">
                        <i class="bi bi-info-circle"></i> Total: @ViewBag.TotalRegistros contratos
                    </small>
                </div>
            </div>
        </form>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <i class="bi bi-file-text" style="font-size: 4rem; color: #6c757d;"></i>
        <h4 class="text-muted mt-3">No hay contratos</h4>
        <p class="text-muted">
            @if (!string.IsNullOrEmpty(ViewBag.Buscar) || !string.IsNullOrEmpty(ViewBag.Estado))
            {
                <span>No se encontraron contratos con los filtros aplicados.</span>
            }
            else
            {
                <span>Comienza creando tu primer contrato.</span>
            }
        </p>
        <a asp-action="Create" class="btn btn-primary mt-2">
            <i class="bi bi-plus-circle"></i> Crear Primer Contrato
        </a>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th style="width: 8%;">
                        <i class="bi bi-hash"></i> ID
                    </th>
                    <th style="width: 18%;">
                        <i class="bi bi-house"></i> Inmueble
                    </th>
                    <th style="width: 16%;">
                        <i class="bi bi-person"></i> Inquilino
                    </th>
                    <th style="width: 16%;">
                        <i class="bi bi-person-badge"></i> Propietario
                    </th>
                    <th style="width: 10%;">
                        <i class="bi bi-calendar-check"></i> Inicio
                    </th>
                    <th style="width: 10%;">
                        <i class="bi bi-calendar-x"></i> Fin
                    </th>
                    <th style="width: 10%;">
                        <i class="bi bi-currency-dollar"></i> Monto
                    </th>
                    <th style="width: 8%;">
                        <i class="bi bi-flag"></i> Tipo
                    </th>
                    <th style="width: 8%;">
                        <i class="bi bi-flag"></i> Estado
                    </th>
                    <th style="width: 4%;">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contrato in Model)
                {
                    <tr>
                        <td>
                            <span class="badge bg-secondary">#@contrato.IdContrato</span>
                        </td>
                        <td>
                            <strong class="text-primary">@contrato.Inmueble?.Direccion</strong>
                        </td>
                        <td>
                            <div>
                                <strong>@(contrato.Inquilino?.Usuario?.Apellido), @(contrato.Inquilino?.Usuario?.Nombre)</strong>
                                <br><small class="text-muted">
                                    <i class="bi bi-card-text"></i> @contrato.Inquilino?.Usuario?.Dni
                                </small>
                            </div>
                        </td>
                        <td>
                            <div>
                                <strong>@(contrato.Propietario?.Usuario?.Apellido), @(contrato.Propietario?.Usuario?.Nombre)</strong>
                                <br><small class="text-muted">
                                    <i class="bi bi-card-text"></i> @contrato.Propietario?.Usuario?.Dni
                                </small>
                            </div>
                        </td>
                        <td>
                            <span class="badge bg-info">
                                @contrato.FechaInicio.ToString("dd/MM/yyyy")
                            </span>
                        </td>
                        <td>
                            <span class="badge bg-warning text-dark">
                                @contrato.FechaFin.ToString("dd/MM/yyyy")
                            </span>
                            @if (contrato.FechaFinAnticipada.HasValue)
                            {
                                <br><small class="text-muted">
                                    <i class="bi bi-clock-history"></i> @contrato.FechaFinAnticipada.Value.ToString("dd/MM/yyyy")
                                </small>
                            }
                        </td>
                        <td>
                            <strong class="text-success">
                                @contrato.MontoMensual.ToString("C", new System.Globalization.CultureInfo("es-AR"))
                            </strong>
                            @if (contrato.MultaAplicada > 0)
                            {
                                <br><small class="text-danger">
                                    <i class="bi bi-exclamation-triangle"></i> @contrato.MultaAplicada.ToString("C", new System.Globalization.CultureInfo("es-AR"))
                                </small>
                            }
                        </td>
                        <td>
                            @{
                                var tipoBadgeClass = contrato.TipoContrato switch
                                {
                                    "alquiler" => "bg-primary",
                                    "venta" => "bg-success", 
                                    _ => "bg-light text-dark"
                                };
        
                                var tipoTexto = contrato.TipoContrato switch
                                {
                                    "alquiler" => "ALQUILER",
                                    "venta" => "VENTA",
                                    _ => contrato.TipoContrato?.ToUpper() ?? "SIN TIPO"
                                };
                            }
                                <span class="badge @tipoBadgeClass">@tipoTexto</span>
                        </td>

                        <td>
                            @{
                                var estadoBadgeClass = contrato.Estado switch
                                {
                                    "vigente" => "bg-success",
                                    "finalizado" => "bg-secondary",
                                    "finalizado_anticipado" => "bg-warning text-dark",
                                    _ => "bg-light text-dark"
                                };
                                
                                var estadoTexto = contrato.Estado switch
                                {
                                    "vigente" => "VIGENTE",
                                    "finalizado" => "FINALIZADO",
                                    "finalizado_anticipado" => "FINALIZADO ANTICIPADO",
                                    _ => contrato.Estado.ToUpper()
                                };
                            }
                            <span class="badge @estadoBadgeClass">@estadoTexto</span>
                        </td>
                        <td>
                            <div class="dropdown">
                                <div class="btn-group" role="group">
                                <a asp-action="Details" asp-route-id="@contrato.IdContrato" 
                                   class="btn btn-success btn-sm" title="Detalle ">
                                    <i class="bi bi-file-earmark-text"></i>
                                </a>
                                <a asp-action="Edit" asp-route-id="@contrato.IdContrato" 
                                   class="btn btn-warning btn-sm" title="Editar">
                                    <i class="bi bi-pencil"></i>
                                </a>
                                <a asp-controller="ImagenesInmueble" asp-action="Index" asp-route-idInmueble="@contrato.IdContrato" 
                                   class="btn btn-info btn-sm" title="Imágenes">
                                    <i class="bi bi-images"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@contrato.IdContrato" 
                                   class="btn btn-danger btn-sm" title="Finalizar Contrato">
                                    <i class="bi bi-flag-fill"></i>
                                </a>
                            </div>
                                
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Paginación -->
    @if (ViewBag.TotalPaginas > 1)
    {
        <nav aria-label="Paginación de contratos" class="mt-4">
            <ul class="pagination justify-content-center">
                <!-- Página anterior -->
                @if (ViewBag.PaginaActual > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" 
                           asp-route-pagina="@(ViewBag.PaginaActual - 1)"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">
                            <i class="bi bi-chevron-left"></i> Anterior
                        </a>
                    </li>
                }

                <!-- Páginas numéricas -->
                @{
                    int inicioRango = Math.Max(1, ViewBag.PaginaActual - 2);
                    int finRango = Math.Min(ViewBag.TotalPaginas, ViewBag.PaginaActual + 2);
                }

                @if (inicioRango > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pagina="1"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">1</a>
                    </li>
                    @if (inicioRango > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                }

                @for (int i = inicioRango; i <= finRango; i++)
                {
                    <li class="page-item @(i == ViewBag.PaginaActual ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pagina="@i"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">@i</a>
                    </li>
                }

                @if (finRango < ViewBag.TotalPaginas)
                {
                    @if (finRango < ViewBag.TotalPaginas - 1)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-pagina="@ViewBag.TotalPaginas"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">@ViewBag.TotalPaginas</a>
                    </li>
                }

                <!-- Página siguiente -->
                @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" 
                           asp-route-pagina="@(ViewBag.PaginaActual + 1)"
                           asp-route-buscar="@ViewBag.Buscar"
                           asp-route-estado="@ViewBag.Estado">
                            Siguiente <i class="bi bi-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </nav>

        <!-- Información de paginación -->
        <div class="text-center text-muted mt-3">
            <small>
                <i class="bi bi-info-circle"></i>
                Mostrando @((ViewBag.PaginaActual - 1) * 10 + 1) - 
                @(Math.Min(ViewBag.PaginaActual * 10, ViewBag.TotalRegistros)) 
                de @ViewBag.TotalRegistros contratos
            </small>
        </div>
    }
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Auto-submit al cambiar estado
            const estadoSelect = document.getElementById('estado');
            if (estadoSelect) {
                estadoSelect.addEventListener('change', function() {
                    this.form.submit();
                });
            }

            // Confirmación para finalizar contratos
            const finalizarLinks = document.querySelectorAll('a[href*="Delete"]');
            finalizarLinks.forEach(link => {
                link.addEventListener('click', function(e) {
                    if (!confirm('¿Está seguro que desea finalizar este contrato? Esta acción no se puede deshacer.')) {
                        e.preventDefault();
                    }
                });
            });

            // Tooltip para badges de estado
            const badges = document.querySelectorAll('.badge');
            badges.forEach(badge => {
                badge.title = badge.textContent.trim();
            });
        });
    </script>

    <style>
        .table th {
            background-color: #343a40;
            color: white;
            font-weight: 600;
            border-color: #454d55;
        }
        
        .table-striped > tbody > tr:nth-of-type(even) > td {
        background-color: #f8f9fa; 
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(0,123,255,.1);
        }
        
        .badge {
            font-size: 0.75rem;
            font-weight: 500;
        }
        
        .dropdown-menu {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
        
        .dropdown-item:hover {
            background-color: #f8f9fa;
        }
        
        .pagination .page-link {
            border-color: #dee2e6;
        }
        
        .pagination .page-item.active .page-link {
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        
        .card-body {
            padding: 1.5rem;
        }
    </style>
}